name: Deploy Monitoring Stack

on:
  push:
    paths:
      - 'monitoring/**'
    branches:
      - main
  workflow_dispatch:
    # Permet de dÃ©clencher manuellement le workflow depuis l'interface GitHub

jobs:
  deploy-monitoring:
    name: DÃ©ploiement de la stack de monitoring
    runs-on: self-hosted

    steps:
      - name: â†“ Cloner le dÃ©pÃ´t
        uses: actions/checkout@v4

      - name: ðŸš€ Installer Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: ðŸ¤§ Ajouter le repo prometheus-community
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update

      - name: ðŸ“„ Utiliser admin.conf comme KUBECONFIG
        run: |
          mkdir -p ~/.kube
          cp /etc/kubernetes/admin.conf ~/.kube/config
          chmod 600 ~/.kube/config
        shell: bash

      - name: âœ… DÃ©ployer la stack kube-prometheus-stack
        run: |
          helm upgrade --install monitoring prometheus-community/kube-prometheus-stack \
            --namespace monitoring --create-namespace \
            -f monitoring/helm-values/kube-prometheus-stack-values.yaml
        env:
          KUBECONFIG: /root/.kube/config

      - name: ðŸŒŽ Afficher l'Ã©tat des pods
        run: kubectl get pods -n monitoring -o wide
